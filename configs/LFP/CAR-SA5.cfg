[Setup]
    # in_dir = "E:\Ham_Data\Batch_3\A13_CAR-SA5"
    # in_dir = "E:\Ham_Data\Batch_3\A13_CAR-SA5\CAR-SA5_20200219"
    # in_dir = "E:\Ham_Data\Batch_3\A13_CAR-SA5\CAR-SA5_20200222"
    in_dir = "E:\Ham_Data\Batch_3\A13_CAR-SA5\CAR-SA5_20200228"
    # in_dir = "E:\Ham_Data\Batch_3\A13_CAR-SA5\CAR-SA5_20200305_s7"
    # If out_dir is blank, defaults to in_dir
    out_dir = 

    # Write None for no regex
    regex_filter = CAR-SA5(?:(?!Behav).)+$
    
    # Description of analysis_flags
    # 0 - plot periodograms and ptrs in seperate plots for each tetrode. 
    # 1 - plot graphs from all tetrodes in a single .png (periodogram or spectrograms)
    # 2 - Compare periodograms for FR and FI for specific eegs
    # 3 - Compare coherence in terms of freq between regions in wchan
    # 4 - Calculate coherence and plot based on trials/block/mean

    analysis_flags = [0, 0, 0, 0, 0]
    
    # bad_chans = 1_2, 5_6, 11_12
    # bad_chans = 1, 2, 11, 12
    bad_chans = []


    # Use 1 as True, 0 as False
    # Plot similarity index
    r_SI = 0
    # Plot raw trace in block windows
    r_plot = 0
    # Plot raw trace in trial windows
    rt_plot = 0
    # Save csv w LFP threshold info
    r_csv = 0
    # Differential Recording - Not fully setup yet
    dr_mode = 0

    # Description of alignment
    # 0 - Align to reward
    # 1 - Align to pellet drop
    # 2 - Align to FI
    # 3 - Align to First Response
    # 4 - Align to Double Reward
    # 5 - Align to Tone
    # if all 0, plots from start of trial
    alignment = [0, 0, 0, 0, 0, 0]

    # Use 1 as True, 0 as Fal1e
    filt = 1
    
    filt_btm = 1.0
    filt_top = 120

    # TODO support list - can use json.loads if startswith "["
    chans = 16

[MNE]
    # Session specific params for mne
    mne = {
            "2020-02-19": {
                "Bad Chs": [],
                "Bad ICs": [4, 6, 8],
                "Drop Epochs": {
                    # "R/Lever": [13, 15, 21, 44, 45, 69, 70, 78, 79, 104, 137, 153, 183, 189, 194],
                    # "L/Lever": [9, 18, 39, 44, 46, 49, 50, 54, 76, 78]
                    }
                },
            "2020-02-22": {
                "Bad Chs": [],
                "Bad ICs": [2, 4, 5, 6],
                "Drop Epochs": {
                    }
                },
            "2020-02-28": {
                "Bad Chs": [],
                "Bad ICs": [5,6,7,8,9],
                "Drop Epochs": {
                    }
                }
        }

    # Temporary condition to bypass ICA
    do_mne_ICA = 1
    skip_plots = 1
    
    # Set baseline to use for correction. Must be in [].
    baseline = [-0.4, -0.2]
    # baseline = None
    
    # Temp overall control for plotting functions
    mne_plot_params = {
        # Can comment in between
        "plot_image" : 0,
        # used to encode
        "topo_seq": 0,
        "plot_reg": 0
        }

    # comp_conds = ["Pellet/FR", "Pellet/FI"]
    # comp_conds = ["R/Lever", "L/Lever"]
    
    comp_conds = ["Collection/FR", "Collection/FI"]
    # comp_conds = ["Lever"]
    # comp_conds = ["Pellet"]

[Behav Params]
    # Use 1 as True, 0 as False - Plot behav timepoints on graph
    behav = 1
    
    # Description of vline options
    # 0 - plot levers
    # 1 - plot rewards
    # 2 - plot pellets
    # 3 - plot double pells
    behav_plot = [1, 1, 1, 1]

[Behav Plot]
    # Use 1 as True, 0 as False
    hist = 0
    hist_lev = 0
    raster = 0
    cumulative = 0
    clust = 0

[Artefact Params]
    # Use 1 as True, 0 as False
    # Not compatible with DR mode. Please set artf to 0
    artf = 0
    
    sd_thres = 4
    min_artf_freq = 8
    rep_freq = 0

[Regions]    # Pass region names and blocks
    1 = AI * 6
    2 = CLA * 2
    3 = ACC * 4
    4 = RSC * 4

[Shuttles]    # Pass shuttle number and blocks
    1 = S1 * 2
    2 = S2 * 2
    3 = S3 * 2
    4 = S4 * 2
    5 = S7 * 2
    6 = S8 * 2
    7 = S6 * 2
    8 = S5 * 2

[Wavelet]   # Generates wavelet coherence graphs by combinining tetrodes in sets of 2
    # Plot options
    p_blocks = 0
    p_trials = 1
    p_wcohere_mean = 0
    # Option for seperating wcohere mean into FR and FI
    split_sch = 0

    overwrite_pickles = 0
    # plot single freq wcohere (0 skips function)
    target_freq = 8
    
# # SA5 02-12
#     wchans = 16, 9, 3, 2
# SA5 02-19
    wchans = 14, 9, 7, 5
# # SA5 02-22
#     wchans = 14, 9, 7, 5
# # SA5 02-23
#     wchans = Alot of noise
# # SA5 02-27
#     wchans = 14, 9, 7, 5
# SA5 02-28
    # wchans = 8, 4
    # wchans = 14, 10, 8, 4
# # SA5 03-01
#     wchans = 14, 9, 7, 5
# # SA5 03-03
#     wchans = 13, 9, 7, 5
# SA5 03-05
    # wchans = 9, 8
    # wchans = 14, 9, 8, 5

# EEG assignment:
# T1    -> 44, ch11, Shuttle 1, AI
# T2    -> 48, ch12, Shuttle 1, AI
# T3    -> 40, ch10, Shuttle 2, AI
# T4    -> 36, ch 9, Shuttle 2, AI
# T5    -> 60, ch15, Shuttle 3, AI 1
# T6    -> 64, ch16, Shuttle 3, AI
# T7    -> 56, ch14, Shuttle 4, CLA 1
# T8    -> 52, ch13, Shuttle 4, CLA 
# T9    ->  4, ch 1, Shuttle 7, ACC
# T10   ->  8, ch 2, Shuttle 7, ACC
# T11   -> 12, ch 3, Shuttle 8, ACC
# T12   -> 16, ch 4, Shuttle 8, ACC
# T13   -> 28, ch 7, Shuttle 6, RSC
# T14   -> 32, ch 8, Shuttle 6, RSC
# T15   -> 24, ch 6, Shuttle 5, RSC
# T16   -> 20, ch 5, Shuttle 5, RSC
